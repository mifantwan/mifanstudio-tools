"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
this["webpackHotUpdateMifanStudio"]("local-frameworks",{

/***/ "./sources/local/js/components/navigation.js":
/*!***************************************************!*\
  !*** ./sources/local/js/components/navigation.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ navigation)\n/* harmony export */ });\n/* harmony import */ var core_js_modules_es_object_to_string_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.object.to-string.js */ \"./node_modules/core-js/modules/es.object.to-string.js\");\n/* harmony import */ var core_js_modules_web_dom_collections_for_each_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/web.dom-collections.for-each.js */ \"./node_modules/core-js/modules/web.dom-collections.for-each.js\");\n\n\n// Side navigation handler\nfunction handleSideNavigation() {\n  var sideNavs = document.getElementById('local-side-navs');\n  if (!sideNavs) return;\n\n  // Helper function to toggle SVG rotation\n  var toggleSvgRotation = function toggleSvgRotation(link, show) {\n    var svg = link.querySelector('span svg');\n    if (svg) {\n      svg.style.transform = show ? 'rotate(180deg)' : '';\n    }\n  };\n\n  // Event delegation for side navigation clicks\n  sideNavs.addEventListener('click', function (e) {\n    var _link$nextElementSibl;\n    var link = e.target.closest('a');\n    if (!link) return;\n    var hasChildNavs = ((_link$nextElementSibl = link.nextElementSibling) === null || _link$nextElementSibl === void 0 ? void 0 : _link$nextElementSibl.tagName) === 'UL';\n    if (hasChildNavs) {\n      e.preventDefault();\n      link.classList.toggle('show');\n      toggleSvgRotation(link, link.classList.contains('show'));\n\n      // Close sibling dropdowns\n      var siblings = link.parentElement.parentElement.querySelectorAll('a.show');\n      siblings.forEach(function (sibling) {\n        if (sibling !== link) {\n          sibling.classList.remove('show');\n          toggleSvgRotation(sibling, false);\n        }\n      });\n    } else {\n      // Close all dropdowns for leaf items\n      sideNavs.querySelectorAll('a.show').forEach(function (open) {\n        open.classList.remove('show');\n        toggleSvgRotation(open, false);\n      });\n    }\n  });\n\n  // Close dropdowns on outside click\n  document.addEventListener('click', function (e) {\n    if (!sideNavs.contains(e.target)) {\n      sideNavs.querySelectorAll('a.show').forEach(function (open) {\n        open.classList.remove('show');\n        toggleSvgRotation(open, false);\n      });\n    }\n  });\n\n  // Close dropdowns when side nav closes\n  var closeButton = sideNavs.querySelector('.close-floating-widget');\n  closeButton === null || closeButton === void 0 || closeButton.addEventListener('click', function () {\n    sideNavs.querySelectorAll('a.show').forEach(function (open) {\n      open.classList.remove('show');\n      toggleSvgRotation(open, false);\n    });\n  });\n}\n\n// Main navigation handler with nested child nav support\nfunction handleMainNavigation() {\n  var navigation = document.getElementById('local-navigation');\n  var floatingNav = document.getElementById('local-navigation-floating');\n  if (!navigation) return;\n\n  // Find the main navigation nav element\n  var mainNav = navigation.querySelector('nav.navigation-main');\n  if (!mainNav) return;\n\n  // Initialize all dropdown states recursively\n  var _initializeDropdowns = function initializeDropdowns(container) {\n    container.querySelectorAll('li').forEach(function (li) {\n      var link = li.querySelector('a');\n      var submenu = li.querySelector('ul');\n      if (submenu) {\n        link.classList.add('has-dropdown');\n        // Hide submenu initially\n        submenu.style.visibility = 'hidden';\n        submenu.style.opacity = '0';\n\n        // Recursively initialize nested dropdowns\n        _initializeDropdowns(submenu);\n      }\n    });\n  };\n\n  // Check if any child dropdowns are open\n  var hasOpenChildren = function hasOpenChildren(li) {\n    return li.querySelectorAll('li.dropdown-open').length > 0;\n  };\n\n  // Toggle SVG rotation based on dropdown state and child visibility\n  var toggleSvgRotation = function toggleSvgRotation(link, show) {\n    var svg = link.querySelector('span svg');\n    if (!svg) return;\n    var li = link.parentElement;\n    var isNestedDropdown = link.closest('ul.navigation-sub');\n    if (isNestedDropdown) {\n      // For nested dropdowns, rotate 90 degrees if open or has open children\n      svg.style.transform = show || hasOpenChildren(li) ? 'rotate(90deg)' : '';\n    } else {\n      // For top-level dropdowns, rotate 180 degrees if open or has open children\n      svg.style.transform = show || hasOpenChildren(li) ? 'rotate(180deg)' : '';\n    }\n  };\n\n  // Show dropdown with proper positioning\n  var showDropdown = function showDropdown(link) {\n    var li = link.parentElement;\n    var submenu = li.querySelector('ul');\n    if (submenu) {\n      li.classList.add('dropdown-open');\n      submenu.style.visibility = 'visible';\n      submenu.style.opacity = '1';\n\n      // Update SVG rotation for current and parent items\n      toggleSvgRotation(link, true);\n\n      // Update parent SVG rotations\n      var parent = li.parentElement.closest('li');\n      while (parent) {\n        var parentLink = parent.querySelector('a');\n        toggleSvgRotation(parentLink, true);\n        parent = parent.parentElement.closest('li');\n      }\n    }\n  };\n\n  // Hide dropdown\n  var hideDropdown = function hideDropdown(link) {\n    var li = link.parentElement;\n    var submenu = li.querySelector('ul');\n    if (submenu) {\n      li.classList.remove('dropdown-open');\n      submenu.style.visibility = 'hidden';\n      submenu.style.opacity = '0';\n\n      // Update SVG rotation considering child states\n      toggleSvgRotation(link, false);\n\n      // Update parent SVG rotations\n      var parent = li.parentElement.closest('li');\n      while (parent) {\n        var parentLink = parent.querySelector('a');\n        toggleSvgRotation(parentLink, hasOpenChildren(parent));\n        parent = parent.parentElement.closest('li');\n      }\n    }\n  };\n\n  // Hide all dropdowns at a specific level\n  var hideSiblingDropdowns = function hideSiblingDropdowns(currentLi) {\n    var parent = currentLi.parentElement;\n    if (parent) {\n      parent.querySelectorAll('li.dropdown-open').forEach(function (sibling) {\n        if (sibling !== currentLi) {\n          var siblingLink = sibling.querySelector('a');\n          hideDropdown(siblingLink);\n        }\n      });\n    }\n  };\n\n  // Hide all dropdowns in the entire navigation\n  var hideAllDropdowns = function hideAllDropdowns() {\n    mainNav.querySelectorAll('li.dropdown-open').forEach(function (li) {\n      var link = li.querySelector('a');\n      hideDropdown(link);\n    });\n  };\n\n  // Handle nested dropdown positioning\n  var positionNestedDropdowns = function positionNestedDropdowns() {\n    mainNav.querySelectorAll('ul.navigation-sub ul').forEach(function (nestedUl) {\n      var parentLi = nestedUl.parentElement;\n      var parentRect = parentLi.getBoundingClientRect();\n      var viewportWidth = window.innerWidth;\n\n      // Check if dropdown would go off-screen to the right\n      if (parentRect.right + 200 > viewportWidth) {\n        // Position to the left instead\n        nestedUl.style.left = 'auto';\n        nestedUl.style.right = 'calc(100% + var(--space-normal))';\n      } else {\n        // Default right positioning\n        nestedUl.style.left = 'calc(100% + var(--space-normal))';\n        nestedUl.style.right = 'auto';\n      }\n    });\n  };\n\n  // Event delegation for main navigation clicks\n  mainNav.addEventListener('click', function (e) {\n    var link = e.target.closest('li > a');\n    if (!link) return;\n    var hasDropdown = link.classList.contains('has-dropdown');\n    if (hasDropdown) {\n      e.stopPropagation();\n      e.preventDefault();\n      var li = link.parentElement;\n      var isOpen = li.classList.contains('dropdown-open');\n      hideSiblingDropdowns(li);\n      if (!isOpen) {\n        showDropdown(link);\n        setTimeout(positionNestedDropdowns, 10);\n      } else {\n        hideDropdown(link);\n      }\n    } else {\n      hideAllDropdowns();\n    }\n    floatingNav === null || floatingNav === void 0 || floatingNav.classList.remove('show');\n    document.dispatchEvent(new CustomEvent('resetFloatingNav'));\n  });\n\n  // Handle hover events for desktop with improved accessibility\n  mainNav.addEventListener('mouseenter', function (e) {\n    var link = e.target.closest('li > a');\n    if (!link) return;\n    var hasDropdown = link.classList.contains('has-dropdown');\n    if (hasDropdown) {\n      e.stopPropagation();\n      var li = link.parentElement;\n      if (hoverTimeout) {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = null;\n      }\n      hideSiblingDropdowns(li);\n      hoverTimeout = setTimeout(function () {\n        showDropdown(link);\n        setTimeout(positionNestedDropdowns, 10);\n      }, 50);\n    }\n    floatingNav === null || floatingNav === void 0 || floatingNav.classList.remove('show');\n    document.dispatchEvent(new CustomEvent('resetFloatingNav'));\n  }, true);\n\n  // Handle mouse leave on individual dropdown items\n  mainNav.addEventListener('mouseleave', function (e) {\n    var li = e.target.closest('li');\n    if (!li) return;\n    var submenu = li.querySelector('ul');\n    if (submenu) {\n      e.stopPropagation();\n      setTimeout(function () {\n        if (!li.matches(':hover') && !submenu.matches(':hover')) {\n          hideDropdown(li.querySelector('a'));\n        }\n      }, 200);\n    }\n  }, true);\n\n  // Add hover delay timers\n  var hoverTimeout = null;\n  var leaveTimeout = null;\n\n  // Hide dropdowns when mouse leaves the navigation with delay\n  mainNav.addEventListener('mouseleave', function () {\n    if (hoverTimeout) {\n      clearTimeout(hoverTimeout);\n      hoverTimeout = null;\n    }\n    leaveTimeout = setTimeout(function () {\n      hideAllDropdowns();\n    }, 150);\n  });\n\n  // Clear leave timeout when mouse enters navigation\n  mainNav.addEventListener('mouseenter', function () {\n    if (leaveTimeout) {\n      clearTimeout(leaveTimeout);\n      leaveTimeout = null;\n    }\n  });\n\n  // Hide dropdowns when clicking outside\n  document.addEventListener('click', function (e) {\n    if (!mainNav.contains(e.target)) {\n      hideAllDropdowns();\n    }\n  });\n\n  // Handle window resize for dropdown positioning\n  window.addEventListener('resize', function () {\n    positionNestedDropdowns();\n  });\n\n  // Initialize dropdowns\n  _initializeDropdowns(mainNav);\n}\n\n// Main export\nfunction navigation() {\n  handleMainNavigation();\n  handleSideNavigation();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./sources/local/js/components/navigation.js\n\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("6fc5938cacd496536fad")
/******/ })();
/******/ 
/******/ }
);